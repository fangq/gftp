<!doctype book PUBLIC "-//OASIS//DTD DocBook V3.1//EN" []>

<!-- Note: I used the format of the GTK+ FAQ to build this document -->
<!-- Please let me know if there are other ways to improve upon this -->

<book>

<bookinfo>
  <date>$Date: 2006/11/17 02:45:04 $</date>
  <title>gFTP FAQ</title>
  <authorgroup>
    <author>
      <firstname>Brian</firstname>
      <surname>Masney</surname>
    </author>
  </authorgroup>

  <abstract>
    <para>This document is intended to answer questions that are
    likely to be frequently asked by users of gFTP.</para>
  </abstract>

</bookinfo>

<toc></toc>

<!-- ***************************************************************** -->

<chapter>
<title>General Information</title>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>What are the requirements to run gFTP?</title>

<para>
<itemizedlist>
<listitem><simpara>
GTK+ 1.2.3 or higher. GTK+/Glib is included with most systems now. If you
don't have it installed, you may want to check to see if your vendor has a
package available. If not, you can download the latest version of GTK+ and
Glib from 
<ulink url="ftp://ftp.gtk.org/pub/gtk">ftp://ftp.gtk.org/pub/gtk</ulink>.
gFTP will work with either version 1.2 or 2.x of GTK+, but I would recommend
using GTK+ 2.x.
</simpara></listitem>
<listitem><simpara>
pthread libraries. Most systems already satisfy this requirement. If you are
on a platform other than Linux, you may want to take a look at the FSU
Pthreads library at <ulink url="http://www.informatik.hu-berlin.de/~mueller/pthreads">http://www.informatik.hu-berlin.de/~mueller/pthreads</ulink>.
</simpara></listitem>
</itemizedlist>
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>How do I install gFTP?</title>

<para>
<itemizedlist>

<listitem><simpara>
If you do not want to compile gFTP yourself, you can check my webpage. I have
DEBs for Debian and RPMs for RedHat available. If you're looking for Solaris
binaries, check out <ulink url="http://www.sunfreeware.com">http://www.sunfreeware.com</ulink>.
</simpara></listitem>

<listitem><simpara>
If you are compiling gFTP yourself, extract the files from the distribution
with tar -zxvf gftp-&lt;version&gt;.tar.gz
</simpara></listitem>

<listitem><simpara>
Go to the gftp-&lt;version&gt; directory and type 
</simpara>

<literallayout>
<literal>./configure</literal>
<literal>make</literal>
</literallayout>

<simpara>
The configure script will generate a Makefile for your machine, and make
will compile a binary for your machine. By default, when you run
configure, it will install gFTP with the prefix /usr/local, so the gFTP
binary will be /usr/local/bin/gftp. You can change this by typing
configure --prefix=/usr, and it will then install the gFTP binary to
/usr/bin/gftp.
</simpara>
</listitem>

<listitem><simpara>
If the compile suceeds without any errors, you can type make install to 
install the binary. This will also copy some necessary
files to &lt;install prefix&gt;/share/gftp. If you do not have root on your
machine to install these files, copy the contents of the docs/sample.gftp/
directory to ~/.gftp. 
</simpara></listitem>
<listitem><simpara>
You may want to glance at the USERS-GUIDE file that comes with this
distribution. It contains a little bit of information about how to use it.
</simpara></listitem>

</itemizedlist>
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>What systems is gFTP known to run on?</title>

<para>I develop gFTP on a Debian GNU/Linux machine. It should run under
any other Linux distributions. Here is a list of other platforms I have
received successful compile reports:</para>

<itemizedlist>
<listitem><simpara>FreeBSD/NetBSD/OpenBSD/BSDI</simpara></listitem>
<listitem><simpara>Solaris</simpara></listitem>
<listitem><simpara>IRIX</simpara></listitem>
<listitem><simpara>Digital UNIX</simpara></listitem>
<listitem><simpara>HP/UX 11</simpara></listitem>
</itemizedlist>

<para>If gFTP compiles and runs on a platform not listed here, please email me
about it and I'll add it to this list. If you are having problems compiling
GTK+ or gFTP on another platform, try using GNU make instead of your vendor
supplied make.</para>
</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>Does gFTP have a SVN repository?</title>

<para>gFTP is stored in GNOME's SVN repository. For instructions on how to
setup your subversion client, visit the website 
<ulink url="http://developer.gnome.org/tools/svn.html">http://developer.gnome.org/tools/svn.html</ulink>.
In a nutshell, you will need to run the following command to download the latest code:
</para>

<para>

<literallayout>
<literal>svn co http://svn.gnome.org/svn/gftp/trunk gftp</literal>
</literallayout>

</para>

<para>
To compile the SVN code, you will need <emphasis>autoconf</emphasis>,
<emphasis>automake</emphasis> and <emphasis>gettext</emphasis>
installed on your system. Once you have those packages installed, run
the following series of commands:
</para>

<itemizedlist>
<listitem><simpara>Run <emphasis>./autogen.sh</emphasis> to generate the configure scripts.</simpara></listitem>
<listitem><simpara>If that is successful, run <emphasis>./configure</emphasis> to generate the Makefiles. By default, the binaries will be installed in /usr/local/bin. You can change the install location by passing the <emphasis>--prefix</emphasis> argument to configure. For example, let's say you want to install the binaries in /usr/bin. Run <emphasis>configure --prefix=/usr</emphasis>.</simpara></listitem>
<listitem><simpara>If that is successful, run <emphasis>make</emphasis> to build the source.</simpara></listitem>
<listitem><simpara>Optional: If that is successful, run <emphasis>make install</emphasis> to install the binary on your computer.</simpara></listitem>
</itemizedlist>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>How do I report bugs in gFTP?</title>

<para>If you find ANY bugs in gFTP, please check to make sure that you are using
the latest version of gFTP. If you are, please submit all bug reports to
GNOME's Bugzilla. When sending in bug reports, please try to be as
descriptive as possible. Send me what OS/version you are running, what
compiler you are compiling with, the output of <emphasis>gftp --info</emphasis>
and any other important information. If you get gFTP to crash, it would be very
helpful if you could send me a backtrace. If you do not know how to do a
backtrace, download the source code from my website. Edit the Makefile, and
make sure that -g appears in the CFLAGS variable. Then recompile gFTP, but do
NOT run make install because it will install a stripped binary in $PREFIX/bin.
Then type gdb ./gftp. Once you have a (gdb) prompt, type r. When gFTP crashes,
go back to that terminal window, and type bt, and put that output in the bug
that you file with bugzilla.</para>

<para>I also have a gftp-users mailinglist setup. I have a link to the archives
on my main webpage. If it is strictly a bug report, please submit it to
Bugzilla instead of the mailinglist. Bugs that are submitted to bugzilla are
much easier for me to track.</para>

<para>Also, if you do not get a response back from me immediately, that is not
uncommon. I usually stay very busy and I don't get to work on gFTP all of the
time.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>How do I force running the text or gtk+ version of gFTP?</title>

<para>
To run the text port, you can type gftp-text or to run the gtk+ port,
you can run the gftp-gtk. The gftp command is just a shell script that checks
if your DISPLAY variable is set, and if so it'll run the appropriate version.
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>Is there a way for gFTP to download a bunch of files/directories and
then exit when it's completed?</title>

<para>Yes, the text port of gFTP supports this well. You can type:</para>

<para><literallayout><literal>
gftp-text -d ftp://ftp.somesite.com/someplace
</literal></literallayout></para>

<para>
If someplace is a directory, it'll automatically download all of its
subdirectories as well. If you want to transfer a file through ssh instead
of ftp, just change the <emphasis>ftp://</emphasis> to
<emphasis>ssh://</emphasis>.
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>In the GTK+ version of gFTP, do I have to enter a port, username and
password to connect to a ftp server?</title>

<para>No you don't. If you leave the port blank, it'll default to the default
port for the protocol you selected (port 21 for FTP). If you leave the
username blank, it will default to logging in as anonymous.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>Where does gFTP store it's options?</title>

<para>gFTP will automatically create a ~/.gftp directory when it is first run.
Your config file is <emphasis>~/.gftp/gftprc</emphasis>, and this is where
all of gFTP's settings are stored. The config file is well commented, so take
a glance at it and see if there is anything you want to change. Your bookmarks
are stored in the file <emphasis>~/.gftp/bookmarks</emphasis>.</para>

<para>Every time gFTP is run, it will log the contents of the log window
to <emphasis>~/.gftp/gftp.log</emphasis>. The contents of this file will be
automatically purged this file when gFTP is started up.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>Why aren't the file sizes comma separated?</title>

<para>
If gFTP was compiled with _GNU_SOURCE defined (run 
<emphasis>gftp --info</emphasis>), then gFTP will use the printf() modifier
%'ld. If your <emphasis>LANG</emphasis> environment is set to C, then no
commas will be inserted. If you are in the US, change your 
<emphasis>LANG</emphasis> environment variable to <emphasis>en_US</emphasis>.
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>When using an external editor, gFTP does not detect changes that are being made to the file.</title>

<para>
Look at the man page for the editor you are using and see if there is a
command line argument to have the editor run in the foreground (it won't
fork to detact from the current terminal). If you are using one of the
graphical VIM editors, you can add the <emphasis>--nofork</emphasis> argument.
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>How can I increase the size of the fonts in gFTP?</title>

<para>
You can use the gnome-font-properties program to change the fonts used by
all GTK+ 2.x applications.
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>I can't transfer certain file types in binary mode using the FTP protocol.</title>

<para>
Edit your ~/.gftp/gftprc file and look at the ext= lines towards the bottom of the file. These lines control what icon is used for each file type. It also controls what mode is used for the file transfer. For example, to transfer all HTML files as binary, change the following two lines:
</para>

<para><literallayout>
<literal>ext=.htm:world.xpm:A:</literal>
<literal>ext=.html:world.xpm:A:</literal>
</literallayout></para>

<para>
to the following:
</para>

<para><literallayout>
<literal>ext=.htm:world.xpm:B:</literal>
<literal>ext=.html:world.xpm:B:</literal>
</literallayout></para>

</sect1>

<!-- ----------------------------------------------------------------- -->

</chapter>

<!-- ***************************************************************** -->

<chapter>
<title>FTP Protocol</title>

<sect1>
<title>When gFTP tries to get the remote directory listing, the remote server
complains about either the -a or -L argument to LIST.</title>

<para>If the server is complaining about the -L option, go under
<emphasis>FTP->Options->FTP</emphasis> and disable resolve remote symlinks.
If it is complaining about the -a option, go to 
<emphasis>FTP->Options->General</emphasis> and disable show hidden
files.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>When gFTP tries to get the remote directory listing, I receive the
error: <emphasis>Cannot create a data connection: Connection
refused</emphasis></title>

<para>Go under <emphasis>FTP->Options->FTP</emphasis> and turn off passive
file transfers. Instead of sending the PASV command to open up the data
connection on the server side, the data connection will be opened up on the
client side, and the PORT command will be sent to the server instead.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

</chapter>

<!-- ***************************************************************** -->

<chapter>
<title>HTTP Protocol</title>

<sect1>
<title>How do I set up my HTTP Proxy server?</title>

<para>Go under <emphasis>FTP->Options</emphasis> and hit the FTP tab. Enter
HTTP as the proxy type and fill in your proxy server info on that screen.
Then hit the HTTP tab and enter your same proxy server info there.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

</chapter>

<!-- ***************************************************************** -->

<chapter>
<title>SSH Protocol</title>

<sect1>
<title>gFTP will not log into the remote SSH server when using a non-English
locale.</title>

<para>Note: This answer only applies to versions of gFTP &gt;= 2.0.18</para>

<para>
You will need to download the source code to gFTP and edit the appropriate
po/&lt;lang&gt;.po file. You will need to make sure the following strings
are translated exactly as they appear in the SSH client.
</para>

<itemizedlist>
<listitem><simpara>Enter passphrase for RSA key</simpara></listitem>
<listitem><simpara>Enter passphrase for key</simpara></listitem>
<listitem><simpara>Password</simpara></listitem>
<listitem><simpara>password</simpara></listitem>
</itemizedlist>

<para>
Please upload the changes to the PO file to GNOME's SVN or email me the
updated PO file. If you email me the updates, please make sure that you
grab the latest PO file from SVN.
</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>I'm having problems getting SSH2 transfers to work. I keep getting the
error: <emphasis>Error: Message size XXXXXXXX too big from server</emphasis>
</title>

<para>Note: This answer only applies to versions of gFTP &lt;= 2.0.17</para>

<para>What probably is the problem, sftp-server isn't in your path on the
remote server. When you try to connect to the remote server, you'll see the
command gFTP is trying to run, and it'll look something like:</para>

<para><literallayout><literal>ssh -e none -l username hostname "echo -n xsftp ;  sftp-server"</literal></literallayout</para>

<para>Try running this command. If you get a prompt asking:</para>

<para><literallayout>
<literal>The authenticity of host 'hostname (###.###.###.###)' can't be established.</literal>
<literal>RSA key fingerprint is xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx.</literal>
<literal>Are you sure you want to continue connecting (yes/no)?</literal>
</literallayout></para>

<para>Tell it yes. gFTP won't even try to answer this question for you at the
moment. Then, if you get the following output:</para>

<para><literallayout>
<literal>Enter passphrase for key '/home/brian/.ssh/id_dsa':</literal>
<literal>xsftp</literal>
<literal>bash: sftp-server: command not found</literal>
</literallayout></para>

<para>You'll have to set the path to the sftp-server program. Alternatively
you could go under FTP->Options->SSH and enable Use sftp subsys. If you enable
this, then you don't have to know the remote path to your sftp executable.
But if you enable this, gFTP won't be able to send your password over to
the ssh client. So if you're not using ssh-agent, then ssh will spawn the
ssh-askpass program to grab your password.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

<sect1>
<title>What is the difference between the SSH and SSH2 protocols?</title>

<para>Note: This answer only applies to versions of gFTP &lt;= 2.0.15</para>

<para>The SSH protocol uses sftp >= 0.7 from 
<ulink url="http://www.xbill.org/sftp">http://www.xbill.org/sftp</ulink>.
SSH2 uses the native file transfers found in the commercial SSH2 and in later
versions of OpenSSH. The SSH2 protocol uses the sftp-server executable on
the remote host and the SSH protocol uses the sftpserv executable.</para>

<para>Note: Due to confusion, the origional SSH protocol was removed in gFTP
2.0.15. It is not shown in gFTP 2.0.14, but there is a config option called
enable_old_ssh to enable this protocol.</para>

</sect1>

<!-- ----------------------------------------------------------------- -->

</chapter>

<!-- ***************************************************************** -->

<chapter>
<title>SSL Issues</title>

<sect1>
<title>When using the FTPS or HTTPS protocol, gFTP cannot connect if the remote
server uses a self signed certificate.</title>

<para>You must add the public key of your self signed CA to your OpenSSL
certs directory. On my Debian box, the OpenSSL certs are installed in
/usr/lib/ssl/certs.</para>

</sect1>

</chapter>

<!-- ***************************************************************** -->

<chapter>
<title>Compiling Problems</title>

<sect1>
<title>When I try to compile gFTP, I see undefined symbol
<emphasis>libintl_gettext</emphasis>. Or, another error is
<emphasis>undefined symbol LC_ALL.</emphasis></title>

<para>Try running

<para><literallayout><literal>
make distclean ; configure --with-included-gettext.
</literal></literallayout></para>

<para>You could alternatively pass

<literallayout><literal>
--disable-nls
</literal></literallayout>

to configure, and internationalization support will not be compiled in.</para>

</sect1>

</chapter>

</book>
